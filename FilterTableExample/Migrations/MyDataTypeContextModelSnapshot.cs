// <auto-generated />
using System;
using FilterTableExample.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FilterTableExample.Migrations
{
    [DbContext(typeof(MyDataTypeContext))]
    partial class MyDataTypeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FilterTableExample.Data.MyDataType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("MyDataTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Yellow item used to measure for scale",
                            ExpirationDate = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Banana",
                            Price = 4.00m
                        },
                        new
                        {
                            Id = 2,
                            Description = "The forbidden fruit. Keep away from Eve",
                            ExpirationDate = new DateTime(1, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Apple",
                            Price = 2.00m
                        },
                        new
                        {
                            Id = 3,
                            Description = "Adjust things that are out of alignment",
                            Name = "Wrench",
                            Price = 14.00m
                        },
                        new
                        {
                            Id = 4,
                            Description = "More than one piece",
                            ExpirationDate = new DateTime(2100, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Paper",
                            Price = 7.00m
                        },
                        new
                        {
                            Id = 5,
                            Description = "PacMan likes this, a lot!",
                            ExpirationDate = new DateTime(2023, 2, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cheese",
                            Price = 19.25m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
