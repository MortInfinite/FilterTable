// <auto-generated />
using System;
using LogEntryDataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LogEntryDataAccess.Migrations
{
    [DbContext(typeof(LoggingContext))]
    [Migration("20240331143502_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LogData.LogEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EventId")
                        .HasColumnType("int");

                    b.Property<string>("Exception")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogLevel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Payload")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PayloadType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("LogEntries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Disk space",
                            EventId = 1,
                            LogLevel = "Warning",
                            Message = "Drive is low on disk space",
                            Payload = "17TB remaining",
                            PayloadType = "Text",
                            TimeStamp = new DateTime(2024, 3, 31, 11, 35, 1, 671, DateTimeKind.Local).AddTicks(5744)
                        },
                        new
                        {
                            Id = 2,
                            Category = "Disk space",
                            EventId = 1,
                            LogLevel = "Warning",
                            Message = "Drive is still low on disk space",
                            Payload = "16TB remaining",
                            PayloadType = "Text",
                            TimeStamp = new DateTime(2024, 3, 31, 12, 35, 1, 671, DateTimeKind.Local).AddTicks(5829)
                        },
                        new
                        {
                            Id = 3,
                            Category = "Disk space",
                            EventId = 1,
                            LogLevel = "Warning",
                            Message = "Drive is very low on disk space",
                            Payload = "6GB remaining",
                            PayloadType = "Text",
                            TimeStamp = new DateTime(2024, 3, 31, 13, 35, 1, 671, DateTimeKind.Local).AddTicks(5847)
                        },
                        new
                        {
                            Id = 4,
                            Category = "Disk space",
                            EventId = 1,
                            LogLevel = "Error",
                            Message = "Drive is out of disk space",
                            Payload = "127B remaining",
                            PayloadType = "Text",
                            TimeStamp = new DateTime(2024, 3, 31, 14, 35, 1, 671, DateTimeKind.Local).AddTicks(5862)
                        },
                        new
                        {
                            Id = 5,
                            Category = "Memory",
                            EventId = 2,
                            LogLevel = "Information",
                            Message = "High memory usage",
                            Payload = "180GB used",
                            PayloadType = "Text",
                            TimeStamp = new DateTime(2024, 3, 31, 10, 35, 1, 671, DateTimeKind.Local).AddTicks(5925)
                        },
                        new
                        {
                            Id = 6,
                            Category = "Memory",
                            EventId = 2,
                            LogLevel = "Information",
                            Message = "High memory usage",
                            Payload = "189GB used",
                            PayloadType = "Text",
                            TimeStamp = new DateTime(2024, 3, 31, 11, 35, 1, 671, DateTimeKind.Local).AddTicks(5945)
                        },
                        new
                        {
                            Id = 7,
                            Category = "Memory",
                            EventId = 2,
                            LogLevel = "Information",
                            Message = "High memory usage",
                            Payload = "204GB used",
                            PayloadType = "Text",
                            TimeStamp = new DateTime(2024, 3, 31, 12, 35, 1, 671, DateTimeKind.Local).AddTicks(5961)
                        },
                        new
                        {
                            Id = 8,
                            Category = "Memory",
                            EventId = 2,
                            LogLevel = "Warning",
                            Message = "Very high memory usage",
                            Payload = "780GB used",
                            PayloadType = "Text",
                            TimeStamp = new DateTime(2024, 3, 31, 13, 35, 1, 671, DateTimeKind.Local).AddTicks(5976)
                        },
                        new
                        {
                            Id = 9,
                            Category = "Temperature",
                            EventId = 3,
                            LogLevel = "Information",
                            Message = "High CPU temperature",
                            Payload = "50C",
                            PayloadType = "Text",
                            TimeStamp = new DateTime(2024, 3, 31, 10, 35, 1, 671, DateTimeKind.Local).AddTicks(5991)
                        },
                        new
                        {
                            Id = 10,
                            Category = "Temperature",
                            EventId = 3,
                            LogLevel = "Information",
                            Message = "High CPU temperature",
                            Payload = "65C",
                            PayloadType = "Text",
                            TimeStamp = new DateTime(2024, 3, 31, 11, 35, 1, 671, DateTimeKind.Local).AddTicks(6008)
                        },
                        new
                        {
                            Id = 11,
                            Category = "Temperature",
                            EventId = 3,
                            LogLevel = "Information",
                            Message = "High CPU temperature",
                            Payload = "69C (nice)",
                            PayloadType = "Text",
                            TimeStamp = new DateTime(2024, 3, 31, 12, 35, 1, 671, DateTimeKind.Local).AddTicks(6024)
                        },
                        new
                        {
                            Id = 12,
                            Category = "Temperature",
                            EventId = 3,
                            LogLevel = "Warning",
                            Message = "Very CPU temperature",
                            Payload = "99C",
                            PayloadType = "Text",
                            TimeStamp = new DateTime(2024, 3, 31, 13, 35, 1, 671, DateTimeKind.Local).AddTicks(6038)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
